generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  username       String
  email          String    @unique
  password       String 
  user_type      UserType
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  address        String
  phone_number   String
  borrowed_books Book[]
  borrows        Borrows[]
}

model Book {
  id           String     @id @default(uuid())
  title        String
  description  String
  total_score  Int
  pages        Int
  published_at DateTime
  created_at   DateTime   @default(now())
  updated_at   DateTime   @updatedAt
  author       String
  user_id      String
  user         User       @relation(fields: [user_id], references: [id])
  borrowed     Borrows?
  comments     Comments[]
  genres       Genres[]
  cover_pic    Image?
  scores       Score[]
}

model Image {
  id         String   @id @default(uuid())
  url        String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  book_id    String   @unique
  book       Book     @relation(fields: [book_id], references: [id])
}

model Score {
  id         String   @id @default(uuid())
  score      Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  book_id    String
  book       Book     @relation(fields: [book_id], references: [id])
}

model Comments {
  id         String   @id @default(uuid())
  comment    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  book_id    String
  book       Book     @relation(fields: [book_id], references: [id])
}

model Genres {
  id         String   @id @default(uuid())
  genre      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  book_id    String
  book       Book     @relation(fields: [book_id], references: [id])
}

model Borrows {
  id             String   @id @default(uuid())
  book_id        String   @unique
  user_id        String
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  deadline       Int      @default(7)
  expires        Boolean  @default(false)
  date_of_borrow DateTime
  book           Book     @relation(fields: [book_id], references: [id])
  user           User     @relation(fields: [user_id], references: [id])
}

enum UserType {
  MEMBER
  ADMIN
}
